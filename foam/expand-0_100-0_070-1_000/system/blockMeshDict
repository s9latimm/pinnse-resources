FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

scale   1.0;

vertices
(
    (0 -1 -0.5)			//0
    (0 0 -0.5)			//1
    (0 1 -0.5)			//2
    (1 -1 -0.5)			//3
    (1 0 -0.5)			//4
    (1 1 -0.5)			//5
    (4.5 -1 -0.5)		//6
    (4.5 0 -0.5)		//7
    (4.5 1 -0.5)		//8
    (5.5 -1 -0.5)		//9
    (5.5 0 -0.5)		//10
    (5.5 1 -0.5)		//11
    (9 -1 -0.5)			//12
    (9 0 -0.5)			//13
    (9 1 -0.5)			//14
    (10 -1 -0.5)		//15
    (10 0 -0.5)			//16
    (10 1 -0.5)			//17

    (0 -1 0.5)			//18
    (0 0 0.5)			//19
    (0 1 0.5)			//20
    (1 -1 0.5)			//21
    (1 0 0.5)			//22
    (1 1 0.5)			//23
    (4.5 -1 0.5)		//24
    (4.5 0 0.5)			//25
    (4.5 1 0.5)			//26
    (5.5 -1 0.5)		//27
    (5.5 0 0.5)			//28
    (5.5 1 0.5)			//29
    (9 -1 0.5)			//30
    (9 0 0.5)			//31
    (9 1 0.5)			//32
    (10 -1 0.5)			//33
    (10 0 0.5)			//34
    (10 1 0.5)			//35
);

blocks
(
    hex (1 4 5 2 19 22 23 20) (10 10 1) simpleGrading (1 1 1)  		// Block 1
    hex (3 6 7 4 21 24 25 22) (35 10 1) simpleGrading (1 1 1)  		// Block 2
    hex (4 7 8 5 22 25 26 23) (35 10 1) simpleGrading (1 1 1)  		// Block 3
    hex (6 9 10 7 24 27 28 25) (10 10 1) simpleGrading (1 1 1) 		// Block 4
    hex (7 10 11 8 25 28 29 26) (10 10 1) simpleGrading (1 1 1) 	// Block 5
    hex (9 12 13 10 27 30 31 28) (35 10 1) simpleGrading (1 1 1)  	// Block 6
    hex (10 13 14 11 28 31 32 29) (35 10 1) simpleGrading (1 1 1)  	// Block 7
    hex (13 16 17 14 31 34 35 32) (10 10 1) simpleGrading (1 1 1) 	// Block 9
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
	    (1 2 20 19)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (16 17 35 34)
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (2 5 23 20)
            (5 8 26 23)
            (8 11 29 26)
            (11 14 32 29)
            (14 17 35 32)
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (1 4 22 19)
            (3 4 22 21)
            (3 6 24 21)
            (6 9 27 24)
            (9 12 30 27)
            (13 16 34 31)
	    (12 13 31 30)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (1 4 5 2)
            (3 6 7 4)
            (4 7 8 5)
            (6 9 10 7)
            (7 10 11 8)
	    (9 12 13 10)
	    (10 13 14 11)
	    (13 16 17 14)
	    (19 22 23 20)
	    (21 24 25 22)
	    (22 25 26 23)
	    (24 27 28 25)
	    (25 28 29 26)
	    (27 30 31 28)
	    (28 31 32 29)
	    (31 34 35 32)
        );
    }
);
