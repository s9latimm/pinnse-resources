FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

scale   1.0;

vertices
(
    (0 -1 -0.5)			//0
    (0 -0.3 -0.5)		//1
    (0 0.3 -0.5)		//2
    (0 1 -0.5)			//3
    (4.7 -1 -0.5)		//4
    (4.7 -0.3 -0.5)		//5
    (4.7 0.3 -0.5)		//6
    (4.7 1 -0.5)		//7
    (5.3 -1 -0.5)		//8
    (5.3 -0.3 -0.5)		//9
    (5.3 0.3 -0.5)		//10
    (5.3 1 -0.5)		//11
    (10 -1 -0.5)		//12
    (10 -0.3 -0.5)		//13
    (10 0.3 -0.5)		//14
    (10 1 -0.5)			//15

    (0 -1 0.5)			//16
    (0 -0.3 0.5)		//17
    (0 0.3 0.5)			//18
    (0 1 0.5)			//19
    (4.7 -1 0.5)		//20
    (4.7 -0.3 0.5)		//21
    (4.7 0.3 0.5)		//22
    (4.7 1 0.5)			//23
    (5.3 -1 0.5)		//24
    (5.3 -0.3 0.5)		//25
    (5.3 0.3 0.5)		//26
    (5.3 1 0.5)			//27
    (10 -1 0.5)			//28
    (10 -0.3 0.5)		//29
    (10 0.3 0.5)		//30
    (10 1 0.5)			//31
);

blocks
(
    hex (0 4 5 1 16 20 21 17) (47 7 1) simpleGrading (1 1 1)  		// Block 0
    hex (1 5 6 2 17 21 22 18) (47 6 1) simpleGrading (1 1 1)  		// Block 1
    hex (2 6 7 3 18 22 23 19) (47 7 1) simpleGrading (1 1 1)  		// Block 2
    hex (5 9 10 6 21 25 26 22) (6 6 1) simpleGrading (1 1 1) 		// Block 3
    hex (8 12 13 9 24 28 29 25) (47 7 1) simpleGrading (1 1 1) 		// Block 5
    hex (9 13 14 10 25 29 30 26) (47 6 1) simpleGrading (1 1 1)		// Block 6
    hex (10 14 15 11 26 30 31 27) (47 7 1) simpleGrading (1 1 1)	// Block 7

);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 1 17 16)
            (1 2 18 17)
            (2 3 19 18)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (12 13 29 28)
            (13 14 30 29)
            (14 15 31 30)
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (3 7 23 19)
            (6 7 23 22)
            (6 10 26 22)
            (10 11 27 26)
            (11 15 31 27)

        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (0 4 20 16)
            (4 5 21 20)
            (5 9 25 21)
            (8 9 25 24)
            (8 12 28 24)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 4 5 1)
            (1 5 6 2)
            (2 6 7 3)
            (5 9 10 6)
            (8 12 13 9)
            (9 13 14 10)
            (10 14 15 11)
            (16 20 21 17)
            (17 21 22 18)
            (18 22 23 19)
            (21 25 26 22)
            (24 28 29 25)
            (25 29 30 26)
            (26 30 31 27)

        );
    }
);
